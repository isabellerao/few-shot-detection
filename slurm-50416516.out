-------------------------------------------------------------------------------
There are messages associated with the following module(s):
-------------------------------------------------------------------------------

anaconda/5.0.0-py36:
    This module is a contribution from the Poldrack Lab. For questions
    and support, please see https://github.com/poldracklab/lmod_modules

-------------------------------------------------------------------------------

loading annotations into memory...
Done (t=14.89s)
creating index...
index created!
CUDA available: True
Num training images: 118287
accuracy tensor(0., device='cuda:0')
Epoch: 0 | Iteration: 0 | Classification loss: 159.02972 | Regression loss: 1.05740 | Running loss: 160.08713
invalid argument 2: Input tensor must have same size as output tensor apart from the specified dimension at /pytorch/aten/src/THC/generic/THCTensorScatterGather.cu:27
accuracy tensor(0., device='cuda:0')
Epoch: 1 | Iteration: 0 | Classification loss: 956.21265 | Regression loss: 0.80481 | Running loss: 558.55229
accuracy tensor(0., device='cuda:0')
Epoch: 1 | Iteration: 1 | Classification loss: 371.56677 | Regression loss: 1.05266 | Running loss: 496.57467
accuracy tensor(0., device='cuda:0')
Epoch: 2 | Iteration: 0 | Classification loss: 622.84302 | Regression loss: 0.99743 | Running loss: 528.39111
accuracy tensor(0., device='cuda:0')
Epoch: 2 | Iteration: 1 | Classification loss: 904.15161 | Regression loss: 0.99748 | Running loss: 603.74271
accuracy tensor(0., device='cuda:0')
Epoch: 3 | Iteration: 0 | Classification loss: 809.82184 | Regression loss: 1.06800 | Running loss: 638.26723
accuracy tensor(0., device='cuda:0')
Epoch: 3 | Iteration: 1 | Classification loss: 708.14282 | Regression loss: 0.95351 | Running loss: 648.38567
accuracy tensor(0., device='cuda:0')
Epoch: 4 | Iteration: 0 | Classification loss: 366.84589 | Regression loss: 1.08044 | Running loss: 613.32825
accuracy tensor(0., device='cuda:0')
Epoch: 4 | Iteration: 1 | Classification loss: 374.47601 | Regression loss: 0.98696 | Running loss: 586.89878
Epoch     4: reducing learning rate of group 0 to 1.0000e-06.
invalid argument 2: Input tensor must have same size as output tensor apart from the specified dimension at /pytorch/aten/src/THC/generic/THCTensorScatterGather.cu:27
accuracy tensor(0., device='cuda:0')
Epoch: 5 | Iteration: 1 | Classification loss: 933.89374 | Regression loss: 1.05314 | Running loss: 621.70359
accuracy tensor(0., device='cuda:0')
Epoch: 6 | Iteration: 0 | Classification loss: 359.82242 | Regression loss: 1.05091 | Running loss: 597.99175
accuracy tensor(0., device='cuda:0')
Epoch: 6 | Iteration: 1 | Classification loss: 548.13855 | Regression loss: 1.08045 | Running loss: 593.92735
accuracy tensor(0., device='cuda:0')
Epoch: 7 | Iteration: 0 | Classification loss: 1021.50281 | Regression loss: 0.88088 | Running loss: 626.88553
accuracy tensor(0., device='cuda:0')
Epoch: 7 | Iteration: 1 | Classification loss: 499.28036 | Regression loss: 1.02637 | Running loss: 617.84419
invalid argument 2: Input tensor must have same size as output tensor apart from the specified dimension at /pytorch/aten/src/THC/generic/THCTensorScatterGather.cu:27
accuracy tensor(0., device='cuda:0')
Epoch: 8 | Iteration: 1 | Classification loss: 759.38611 | Regression loss: 0.79394 | Running loss: 627.33325
Epoch     8: reducing learning rate of group 0 to 1.0000e-07.
accuracy tensor(0., device='cuda:0')
Epoch: 9 | Iteration: 0 | Classification loss: 692.28082 | Regression loss: 1.11407 | Running loss: 631.46210
accuracy tensor(0., device='cuda:0')
Epoch: 9 | Iteration: 1 | Classification loss: 1398.96521 | Regression loss: 0.92440 | Running loss: 676.66372
